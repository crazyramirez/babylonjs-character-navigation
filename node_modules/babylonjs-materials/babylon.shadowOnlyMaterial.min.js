!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n(require("babylonjs")):"function"==typeof define&&define.amd?define("babylonjs-materials",["babylonjs"],n):"object"==typeof exports?exports["babylonjs-materials"]=n(require("babylonjs")):e.MATERIALS=n(e.BABYLON)}("undefined"!=typeof self?self:"undefined"!=typeof global?global:this,(e=>(()=>{"use strict";var n={520:n=>{n.exports=e}},t={};function i(e){var r=t[e];if(void 0!==r)return r.exports;var o=t[e]={exports:{}};return n[e](o,o.exports,i),o.exports}i.d=(e,n)=>{for(var t in n)i.o(n,t)&&!i.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),i.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};return(()=>{i.d(r,{default:()=>d});var e={};i.r(e),i.d(e,{ShadowOnlyMaterial:()=>l});var n={};i.r(n),i.d(n,{ShadowOnlyMaterial:()=>l});var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])},t(e,n)};function o(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}Object.create,Object.create;var a=i(520);a.ShaderStore.ShadersStore.shadowOnlyPixelShader="precision highp float;\nuniform vec4 vEyePosition;\nuniform float alpha;\nuniform vec3 shadowColor;\nvarying vec3 vPositionW;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#include<helperFunctions>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#include<lightsFragmentFunctions>\n#include<shadowsFragmentFunctions>\n#include<clipPlaneFragmentDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);\n#ifdef NORMAL\nvec3 normalW=normalize(vNormalW);\n#else\nvec3 normalW=vec3(1.0,1.0,1.0);\n#endif\nvec3 diffuseBase=vec3(0.,0.,0.);\nlightingInfo info;\nfloat shadow=1.;\nfloat glossiness=0.;\n#include<lightFragment>[0..1]\nvec4 color=vec4(shadowColor,(1.0-clamp(shadow,0.,1.))*alpha);\n#include<fogFragment>\ngl_FragColor=color;\n#include<imageProcessingCompatibility>\n#define CUSTOM_FRAGMENT_MAIN_END\n}";a.ShaderStore.ShadersStore.shadowOnlyVertexShader="precision highp float;\nattribute vec3 position;\n#ifdef NORMAL\nattribute vec3 normal;\n#endif\n#include<bonesDeclaration>\n#include<bakedVertexAnimationDeclaration>\n#include<instancesDeclaration>\nuniform mat4 view;\nuniform mat4 viewProjection;\n#ifdef POINTSIZE\nuniform float pointSize;\n#endif\nvarying vec3 vPositionW;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#ifdef VERTEXCOLOR\nvarying vec4 vColor;\n#endif\n#include<clipPlaneVertexDeclaration>\n#include<fogVertexDeclaration>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\n#include<instancesVertex>\n#include<bonesVertex>\n#include<bakedVertexAnimation>\nvec4 worldPos=finalWorld*vec4(position,1.0);\ngl_Position=viewProjection*worldPos;\nvPositionW=vec3(worldPos);\n#ifdef NORMAL\nvNormalW=normalize(vec3(finalWorld*vec4(normal,0.0)));\n#endif\n#include<clipPlaneVertex>\n#include<fogVertex>\n#include<shadowsVertex>[0..maxSimultaneousLights]\n#if defined(POINTSIZE) && !defined(WEBGPU)\ngl_PointSize=pointSize;\n#endif\n#define CUSTOM_VERTEX_MAIN_END\n}\n";var s=function(e){function n(){var n=e.call(this)||this;return n.CLIPPLANE=!1,n.CLIPPLANE2=!1,n.CLIPPLANE3=!1,n.CLIPPLANE4=!1,n.CLIPPLANE5=!1,n.CLIPPLANE6=!1,n.POINTSIZE=!1,n.FOG=!1,n.NORMAL=!1,n.NUM_BONE_INFLUENCERS=0,n.BonesPerMesh=0,n.INSTANCES=!1,n.IMAGEPROCESSINGPOSTPROCESS=!1,n.SKIPFINALCOLORCLAMP=!1,n.rebuild(),n}return o(n,e),n}(a.MaterialDefines),l=function(e){function n(n,t){var i=e.call(this,n,t)||this;return i._needAlphaBlending=!0,i.shadowColor=a.Color3.Black(),i}return o(n,e),n.prototype.needAlphaBlending=function(){return this._needAlphaBlending},n.prototype.needAlphaTesting=function(){return!1},n.prototype.getAlphaTestTexture=function(){return null},Object.defineProperty(n.prototype,"activeLight",{get:function(){return this._activeLight},set:function(e){this._activeLight=e},enumerable:!1,configurable:!0}),n.prototype._getFirstShadowLightForMesh=function(e){for(var n=0,t=e.lightSources;n<t.length;n++){var i=t[n];if(i.shadowEnabled)return i}return null},n.prototype.isReadyForSubMesh=function(e,n,t){var i;if(this.isFrozen&&n.effect&&n.effect._wasPreviouslyReady&&n.effect._wasPreviouslyUsingInstances===t)return!0;n.materialDefines||(n.materialDefines=new s);var r=n.materialDefines,o=this.getScene();if(this._isReadyForSubMesh(n))return!0;var l=o.getEngine();if(this._activeLight)for(var f=0,c=e.lightSources;f<c.length;f++){var d=c[f];if(d.shadowEnabled){if(this._activeLight===d)break;var u=e.lightSources.indexOf(this._activeLight);-1!==u&&(e.lightSources.splice(u,1),e.lightSources.splice(0,0,this._activeLight));break}}a.MaterialHelper.PrepareDefinesForFrameBoundValues(o,l,this,r,!!t),a.MaterialHelper.PrepareDefinesForMisc(e,o,!1,this.pointsCloud,this.fogEnabled,this._shouldTurnAlphaTestOn(e),r),r._needNormals=a.MaterialHelper.PrepareDefinesForLights(o,e,r,!1,1);var h=null===(i=this._getFirstShadowLightForMesh(e))||void 0===i?void 0:i.getShadowGenerator();if(this._needAlphaBlending=!0,h&&h.getClassName&&"CascadedShadowGenerator"===h.getClassName()){var p=h;this._needAlphaBlending=!p.autoCalcDepthBounds}if(a.MaterialHelper.PrepareDefinesForAttributes(e,r,!1,!0),r.isDirty){r.markAsProcessed(),o.resetCachedMaterial();var v=new a.EffectFallbacks;r.FOG&&v.addFallback(1,"FOG"),a.MaterialHelper.HandleFallbacksForShadows(r,v,1),r.NUM_BONE_INFLUENCERS>0&&v.addCPUSkinningFallback(0,e),r.IMAGEPROCESSINGPOSTPROCESS=o.imageProcessingConfiguration.applyByPostProcess;var g=[a.VertexBuffer.PositionKind];r.NORMAL&&g.push(a.VertexBuffer.NormalKind),a.MaterialHelper.PrepareAttributesForBones(g,e,r,v),a.MaterialHelper.PrepareAttributesForInstances(g,r);var m=r.toString(),S=["world","view","viewProjection","vEyePosition","vLightsType","vFogInfos","vFogColor","pointSize","alpha","shadowColor","mBones"],y=new Array,P=new Array;(0,a.addClipPlaneUniforms)(S),a.MaterialHelper.PrepareUniformsAndSamplersList({uniformsNames:S,uniformBuffersNames:P,samplers:y,defines:r,maxSimultaneousLights:1}),n.setEffect(o.getEngine().createEffect("shadowOnly",{attributes:g,uniformsNames:S,uniformBuffersNames:P,samplers:y,defines:m,fallbacks:v,onCompiled:this.onCompiled,onError:this.onError,indexParameters:{maxSimultaneousLights:1}},l),r,this._materialContext)}return!(!n.effect||!n.effect.isReady()||(r._renderId=o.getRenderId(),n.effect._wasPreviouslyReady=!0,n.effect._wasPreviouslyUsingInstances=!!t,0))},n.prototype.bindForSubMesh=function(e,n,t){var i=this.getScene(),r=t.materialDefines;if(r){var o=t.effect;if(o){if(this._activeEffect=o,this.bindOnlyWorldMatrix(e),this._activeEffect.setMatrix("viewProjection",i.getTransformMatrix()),a.MaterialHelper.BindBonesParameters(n,this._activeEffect),this._mustRebind(i,o)&&((0,a.bindClipPlane)(o,this,i),this.pointsCloud&&this._activeEffect.setFloat("pointSize",this.pointSize),this._activeEffect.setFloat("alpha",this.alpha),this._activeEffect.setColor3("shadowColor",this.shadowColor),i.bindEyePosition(o)),i.lightsEnabled){a.MaterialHelper.BindLights(i,n,this._activeEffect,r,1);var s=this._getFirstShadowLightForMesh(n);s&&(s._renderId=-1)}(i.fogEnabled&&n.applyFog&&i.fogMode!==a.Scene.FOGMODE_NONE||r.SHADOWCSM0)&&this._activeEffect.setMatrix("view",i.getViewMatrix()),a.MaterialHelper.BindFogParameters(i,n,this._activeEffect),this._afterBind(n,this._activeEffect)}}},n.prototype.clone=function(e){var t=this;return a.SerializationHelper.Clone((function(){return new n(e,t.getScene())}),this)},n.prototype.serialize=function(){var n=e.prototype.serialize.call(this);return n.customType="BABYLON.ShadowOnlyMaterial",n},n.prototype.getClassName=function(){return"ShadowOnlyMaterial"},n.Parse=function(e,t,i){return a.SerializationHelper.Parse((function(){return new n(e.name,t)}),e,t,i)},n}(a.PushMaterial);(0,a.RegisterClass)("BABYLON.ShadowOnlyMaterial",l);var f=void 0!==i.g?i.g:"undefined"!=typeof window?window:void 0;if(void 0!==f)for(var c in e)f.BABYLON[c]=e[c];const d=n})(),r.default})()));
//# sourceMappingURL=babylon.shadowOnlyMaterial.min.js.map